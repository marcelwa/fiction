name: Coverage CI

on:
  push:
    branches:
      - v0.4.0

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Debug

jobs:
  build_and_test:
    name: Coverage on ${{matrix.os}} with ${{matrix.compiler}}
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ${{matrix.os}}

    strategy:
      matrix:
        os: [ubuntu-20.04]
        compiler: [g++-10]

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    
    - name: Install Boost
      run: sudo apt-get update && sudo apt-get install -yq libboost-all-dev

    - name: Create Build Environment
      # Some projects don't allow in-source building, so create a separate build directory
      # We'll use this as our working directory for all subsequent commands
      run: cmake -E make_directory ${{github.workspace}}/build

    - name: Configure CMake
      # Use a bash shell so we can use the same syntax for environment variable
      # access regardless of the host operating system
      shell: bash
      working-directory: ${{github.workspace}}/build
      # Note the current convention is to use the -S and -B options here to specify source 
      # and build directories, but this is only available with CMake 3.13 and higher.  
      # The CMake binaries on the Github Actions machines are (as of this writing) 3.12
      run: cmake $GITHUB_WORKSPACE -DCMAKE_CXX_COMPILER=${{matrix.compiler}} -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DBUILD_LIBS_VERBOSE=ON -DENABLE_PROGRESS_BARS=OFF -DFICTION_TEST=ON -DENABLE_MUGEN=OFF -DWARNINGS_AS_ERRORS=OFF -DENABLE_COVERAGE=ON
      
    - name: Cache Z3
      uses: actions/cache@v2
      id: cache-z3
      with:
        path: ${{github.workspace}}/build/z3
        key: ${{matrix.os}}_${{matrix.compiler}}

    - name: Build
      working-directory: ${{github.workspace}}/build
      shell: bash
      # Execute the build.  You can specify a specific target with "--target <NAME>"
      run: cmake --build . --config $BUILD_TYPE -j2

    - name: Test
      working-directory: ${{github.workspace}}/build
      shell: bash
      # Execute tests defined by the CMake configuration.  
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C $BUILD_TYPE

#    - name: Coverage report
#      uses: codecov/codecov-action@v1
#      with:
#        env_vars: ${{matrix.os}}
#        verbose: true
#        gcov_path_exclude: ${{github.workspace}}/libs/

    - name: Setup and run lcov
      run: |
        sudo apt-get install lcov
        lcov -t "result" -o lcov.info -c -d ${{github.workspace}}/build/
        lcov -e lcov.info "${{github.workspace}}/src*" -o lcov_filtered.info
        lcov -l lcov_filtered.info

    - name: Upload report to Codecov
      run: |
        bash <(curl -s https://codecov.io/bash) -f lcov_filtered.info || echo "Codecov did not collect coverage reports"
